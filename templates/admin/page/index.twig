{% extends 'common/layout-admin.twig' %}

{% block body %}
    {% include '_nav'|portalpartial %}
    {% if page %}
        <div class="clearfix">
            <div class="btn-group btn-group-xs pull-right">
                <a href="#removeModal" data-toggle="modal" data-pid="{{ page.id }}" class="btn btn-danger">Usuń</a>
                <span></span>
            </div>
            <div class="btn-group btn-group-xs pull-left">
                <span></span>
                <a href="/{{ page.slug }}" target="_blank" class="btn btn-success">Podgląd</a>
            </div>
        </div>
    {% endif %}
    <form method="post" action="{{ formAction }}">
        <div class="container">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="title">Tytuł:</label>
                        <input id="title" type="text" name="title" class="form-control" value="{{ page.title }}"/>
                    </div>
                    <div class="form-group">
                        <label for="image">Zdjęcie nagłówka:</label>
                        <div class="input-group">
                            <input id="image" type="text" name="image" class="form-control" value="{{ page.image }}"/>
                            <label for="image-file" class="input-group-addon btn">
                                <i class="fa fa-upload"></i>
                            </label>
                        </div>
                        <div id="image-progress" class="progress hidden">
                            <div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="min-width: 2em;">
                                0%
                            </div>
                        </div>
                        <input id="image-file" type="file" class="hidden upload"
                               data-target="#image"
                               data-url="{{ path_for('admin-page-image') }}"
                               data-max-size="{{ file_size }}"
                               accept="{{ extensions }}"
                        />
                        <span class="small help-block">Maksymalny rozmiar pliku: {{ file_size_human }}</span>
                    </div>
                    <div class="form-group">
                        <label for="color">Kolor przewodni:</label>
                        <input type="text" name="color" class="form-control color" value="{{ page.color }}"/>
                    </div>
                    <div class="form-group">
                        <label for="color">Kolor drugorzędny:</label>
                        <input type="text" name="text_color" class="form-control color" value="{{ page.text_color }}"/>
                    </div>
                </div>
                <div class="col-md-8">
                    <div class="form-group">
                        <textarea id="editor" class="form-control" name="content" placeholder="Zawartość">{{ page.content }}</textarea>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-8 col-xs-offset-2 col-sm-4 col-sm-offset-4 col-md-2 col-md-offset-5">
                    <button type="submit" class="btn btn-primary btn-block">Zapisz</button>
                </div>
            </div>
        </div>
    </form>
    {% include '_remove'|portalpartial %}
{% endblock %}

{% block scripts %}
    <script type="text/javascript">
        $('.color').colorPicker();
    </script>    
    <script src="/assets/libs/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({
            selector: '#editor',
            plugins: 'image',
            min_height: 250,
            file_picker_types: 'image',
            automatic_uploads: true,
            images_upload_url: "{{ path_for('admin-page-image') }}",
            // and here's our custom image picker
            file_picker_callback: function(cb, value, meta) {
                var input = document.createElement('input');
                input.setAttribute('type', 'file');
                input.setAttribute('accept', 'image/*');

                // Note: In modern browsers input[type="file"] is functional without
                // even adding it to the DOM, but that might not be the case in some older
                // or quirky browsers like IE, so you might want to add it to the DOM
                // just in case, and visually hide it. And do not forget do remove it
                // once you do not need it anymore.

                input.onchange = function() {
                    var file = this.files[0];

                    var reader = new FileReader();
                    reader.onload = function () {
                        // Note: Now we need to register the blob in TinyMCEs image blob
                        // registry. In the next release this part hopefully won't be
                        // necessary, as we are looking to handle it internally.
                        var id = 'blobid' + (new Date()).getTime();
                        var blobCache =  tinymce.activeEditor.editorUpload.blobCache;
                        var base64 = reader.result.split(',')[1];
                        var blobInfo = blobCache.create(id, file, base64);
                        blobCache.add(blobInfo);

                        // call the callback and populate the Title field with the file name
                        cb(blobInfo.blobUri(), { title: file.name });
                    };
                    reader.readAsDataURL(file);
                };

                input.click();
            }
        });
    </script>
{% endblock %}
